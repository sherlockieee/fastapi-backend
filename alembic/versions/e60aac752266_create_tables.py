"""create tables

Revision ID: e60aac752266
Revises: 
Create Date: 2022-09-27 21:29:25.687787+00:00

"""
from tabnanny import check
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from app.schemas.currency import Currency

# revision identifiers, used by Alembic.
revision = "e60aac752266"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    currency_enum = postgresql.ENUM(Currency, name="currency_enum", create_type=False)
    currency_enum.create(op.get_bind(), checkfirst=True)

    op.create_table(
        "projects",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("uuid", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("funding_needed", sa.Float(), nullable=False),
        sa.Column(
            "currency",
            currency_enum,
            nullable=False,
        ),
        sa.Column("total_raised", sa.Float(), nullable=True),
        sa.Column("total_backers", sa.Integer(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("created", sa.DateTime(timezone=True), nullable=True),
        sa.Column("end_date", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_projects_id"), "projects", ["id"], unique=False)
    op.create_index(op.f("ix_projects_title"), "projects", ["title"], unique=False)
    op.create_index(op.f("ix_projects_uuid"), "projects", ["uuid"], unique=False)
    op.create_table(
        "tags",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_tags_id"), "tags", ["id"], unique=False)
    op.create_table(
        "project_tags",
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["tags.id"],
        ),
        sa.PrimaryKeyConstraint("project_id", "tag_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("project_tags")
    op.drop_index(op.f("ix_tags_id"), table_name="tags")
    op.drop_table("tags")
    op.drop_index(op.f("ix_projects_uuid"), table_name="projects")
    op.drop_index(op.f("ix_projects_title"), table_name="projects")
    op.drop_index(op.f("ix_projects_id"), table_name="projects")
    currency_enum = postgresql.ENUM(Currency, name="currency_enum")
    currency_enum.drop(op.get_bind())
    op.drop_table("projects")
    # ### end Alembic commands ###
