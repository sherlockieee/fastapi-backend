"""update project table to include owners

Revision ID: 66900c0c2bf5
Revises: 8db40c0cbbcb
Create Date: 2022-10-16 16:32:19.181118+00:00

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "66900c0c2bf5"
down_revision = "8db40c0cbbcb"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("projects", sa.Column("total_credits", sa.Integer(), nullable=True))
    op.add_column("projects", sa.Column("cost_per_credit", sa.Float(), nullable=True))
    op.add_column("projects", sa.Column("needed_credits", sa.Integer(), nullable=True))
    op.add_column("projects", sa.Column("owner_id", sa.Integer(), nullable=True))
    op.create_foreign_key(None, "projects", "users", ["owner_id"], ["id"])
    op.add_column("users", sa.Column("is_project_owner", sa.Boolean(), nullable=True))
    op.add_column("users", sa.Column("is_backer", sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("users", "is_backer")
    op.drop_column("users", "is_project_owner")
    op.drop_constraint(None, "projects", type_="foreignkey")

    op.drop_column("projects", "owner_id")
    op.drop_column("projects", "needed_credits")
    op.drop_column("projects", "cost_per_credit")
    op.drop_column("projects", "total_credits")
    # ### end Alembic commands ###
